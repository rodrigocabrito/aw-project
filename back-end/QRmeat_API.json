{
  "openapi": "3.0.3",
  "info": {
    "title": "QRmeat API",
    "description": "Description",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "AW2324-Group13",
      "email": "fc.AW2324.Group13@alunos.fc.ul.pt"
    },
    "license": {
      "name": "Licence Name",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "servers": [
    {
      "url": "http://api.example.com"
    }
  ],
  "tags": [
    {
      "name": "supermarket",
      "description": "Info related to supermarkets"
    },
    {
      "name": "product",
      "description": "Info about meat"
    },
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "news",
      "description": "News about environmental issues and meat consumption"
    },
    {
      "name": "stats",
      "description": "Stats about meat consumption"
    }
  ],
  "paths": {
    "/supermarkets": {
      "get": {
        "tags": [
          "supermarket"
        ],
        "summary": "Finds all supermarkets",
        "description": "Finds all existing supermarkets in the app",
        "operationId": "findAllSupermarkets",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Supermarket"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Supermarket"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/supermarkets/{supermarket_id}": {
      "get": {
        "tags": [
          "supermarket"
        ],
        "summary": "Finds Supermarket by id",
        "description": "Finds the Supermarket with the corresponding given id.",
        "operationId": "findSupermarketById",
        "parameters": [
          {
            "name": "supermarket_id",
            "in": "path",
            "description": "ID of supermarket to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supermarket"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Supermarket"
                }
              }
            }
          },
          "400": {
            "description": "Invalid id value"
          }
        }
      }
    },
    "/supermarkets/{supermarket_id}/categories": {
      "get": {
        "tags": [
          "supermarket"
        ],
        "summary": "Finds categories from a Supermarket.",
        "description": "Finds the catgories from a supermarket with the corresponding given id.",
        "operationId": "findCetogoriesBySupermarketId",
        "parameters": [
          {
            "name": "supermarket_id",
            "in": "path",
            "description": "ID of supermarket to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid id value"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Returns all products",
        "description": "Returns all products in the app",
        "operationId": "findAllProducts",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid id value"
          }
        }
      }
    },
    "/products/{product_id}": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Find Product by id",
        "description": "Finds the Product with the corresponding given id.",
        "operationId": "findProductById",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "ID of product to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid id value"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Find all users",
        "description": "Finds all users existing in the app.",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Find User by id",
        "description": "Finds the User with the corresponding given id.",
        "operationId": "findUserById",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                  
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid id value"
          }
        }
      }
    },
    "/users/login": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/users/{user_id}/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs out user by id.",
        "description": "",
        "operationId": "logoutUser",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/users/{user_id}/wishlist": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Find wishlist by user id",
        "description": "",
        "operationId": "findWishlistByUserId",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of user to return wishlist from",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Wishlist"
                }
              },
              "application/xml": {
                "schema": {
                    "$ref": "#/components/schemas/Wishlist"
                }
              }
            }
          },
          "400": {
            "description": "Invalid id value"
          }
        }
      }
    },
    "/users/{user_id}/accinfo": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Get user by user name",
        "description": "",
        "operationId": "updateUserAccInfo",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phto_Url",
            "in": "query",
            "description": "The photo for the user's profile picture.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user id supplied."
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{user_id}/settings": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Updates settings from user.",
        "description": "",
        "operationId": "updateUserSettings",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "The currency of which the app's products are displayed.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user id supplied."
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{user_id}/wishlist/{product_id}": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Add product to wishlist",
        "description": "",
        "operationId": "addProductToWishlist",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID of user to add the wishlist",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "product_id",
            "in": "path",
            "description": "ID of product to add to wishlist",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid id value"
          }
        }
      }
    },
    "/news": {
      "get": {
        "tags": [
          "news"
        ],
        "summary": "Finds all news in the app.",
        "description": "",
        "operationId": "findAllNews",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/News"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/News"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/news/{news_id}": {
      "get": {
        "tags": [
          "news"
        ],
        "summary": "Find News by id",
        "description": "Finds the News with the corresponding given id.",
        "operationId": "findNewsById",
        "parameters": [
          {
            "name": "news_id",
            "in": "path",
            "description": "ID of news to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/News"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/News"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid id value"
          }
        }
      }
    },
    "/stats/positive_stats": {
      "get": {
        "tags": [
          "stats"
        ],
        "summary": "Find positive stats in the app",
        "description": "",
        "operationId": "findPositiveStats",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/News"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/News"
                }
              }
            }
          }
        }
      }
    },
    "/stats/negative_stats": {
      "get": {
        "tags": [
          "stats"
        ],
        "summary": "Find negative stats in the app",
        "description": "",
        "operationId": "findNegativeStats",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/News"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/News"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "required": [
          "name",
          "categories",
          "supermarket",
          "category",
          "details",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "name": {
            "type": "string",
            "example": "Carne de Vaca"
          },
          "price": {
            "type": "integer",
            "format": "int32",
            "example": 7
          },
          "supermarket": {
            "$ref": "#/components/schemas/Supermarket"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "photos_Url": {
            "type": "array",
            "xml": {
              "name": "photos",
              "wrapped": true
            },
            "items": {
              "type": "string",
              "example": "idk"
            }
          },
          "details": {
            "$ref": "#/components/schemas/Product_Details"
          },
          "feedback": {
            "type": "array",
            "xml": {
              "name": "feedback",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Feedback"
            }
          }
        },
        "xml": {
          "name": "product"
        }
      },
      "Feedback": {
        "required": [
          "user",
          "rating",
          "product"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 100000
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "rating": {
            "type": "integer",
            "format": "int64",
            "example": 5
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          }
        },
        "xml": {
          "name": "feedback"
        }
      },
      "Product_Details": {
        "type": "object",
        "properties": {
          "producer": {
            "type": "string",
            "example": "Monte do Bico"
          },
          "origin": {
            "type": "string",
            "example": "Alentejo"
          },
          "race": {
            "type": "string",
            "example": "Alentejana"
          },
          "gender": {
            "type": "string",
            "example": "F"
          },
          "age": {
            "type": "string",
            "example": "10A 2M"
          }
        },
        "xml": {
          "name": "product_details"
        }
      },
      "Category": {
        "required": [
          "name",
          "products"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Continente"
          },
          "products": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          }
        },
        "xml": {
          "name": "category"
        }
      },
      "User": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "username": {
            "type": "string",
            "example": "theUser"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          },
          "photo_Url": {
            "type": "string",
            "example": "idk"
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "Supermarket": {
        "required": [
          "name",
          "categories"
        ],
        "type": "object",
        "properties": {
          "supermarket_id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "name": {
            "type": "string",
            "example": "Continente"
          },
          "location": {
            "type": "string",
            "example": "Telheiras"
          },
          "categories": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          }
        },
        "xml": {
          "name": "supermarket"
        }
      },
      "Stats": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "negative_stats": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "positive_stats": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "xml": {
          "name": "stats"
        }
      },
      "News": {
        "required": [
          "header",
          "content",
          "author"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "header": {
            "type": "string",
            "example": "header"
          },
          "content": {
            "type": "string",
            "example": "content"
          },
          "author": {
            "type": "string",
            "example": "author"
          },
          "date": {
            "type": "string",
            "example": "date-time"
          },
          "photo_Url": {
            "type": "string",
            "example": "photoUrl"
          }
        },
        "xml": {
          "name": "news"
        }
      },
      "Wishlist": {
        "required": [
          "header",
          "content",
          "author"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "products": {
            "type": "array",
              "xml": {
                "wrapped": true
              },
              "items": {
                "$ref": "#/components/schemas/Product"
              }
          }
        },
        "xml": {
          "name": "news"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "xml": {
          "name": "##default"
        }
      }
    },
    "requestBodies": {
      "Pet": {
        "description": "Pet object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Supermarket"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Supermarket"
            }
          }
        }
      },
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "petstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}